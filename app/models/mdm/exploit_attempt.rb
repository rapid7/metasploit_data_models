class Mdm::ExploitAttempt < ActiveRecord::Base
  #
  # Associations
  #

  # @!attribute host
  #   Host that was attempted to be exploited.
  #
  #   @return [Mdm::Host]
  belongs_to :host,
             class_name: 'Mdm::Host',
             counter_cache: :exploit_attempt_count,
             inverse_of: :exploit_attempts

  # @!attribute loot
  #   Loot gathers from the successful exploit.
  #
  #   @return [Mdm::Loot, nil]
  belongs_to :loot,
             class_name: 'Mdm::Loot',
             inverse_of: :exploit_attempt

  # @!attribute service
  #   The service being exploited on {#host}.
  #
  #   @return [Mdm::Service, nil]
  belongs_to :service,
             class_name: 'Mdm::Service',
             inverse_of: :exploit_attempts

  # @!attribute session
  #   The session that was established when this attempt was successful.
  #
  #   @return [Mdm::Session]
  #   @return [nil] if session was not established.
  belongs_to :session,
             class_name: 'Mdm::Session',
             inverse_of: :exploit_attempt

  # @!attribute vuln
  #   The vulnerability that was attempted to be exploited.
  #
  #   @return [Mdm::Vuln, nil]
  belongs_to :vuln,
             class_name: 'Mdm::Vuln',
             inverse_of: :exploit_attempts

  #
  # Validations
  #

  validates :host_id, :presence => true

  ActiveSupport.run_load_hooks(:mdm_exploit_attempt, self)
end
